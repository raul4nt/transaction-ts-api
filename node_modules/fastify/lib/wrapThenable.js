'use strict';
const { kReplyIsError, kReplyHijacked } = require('./symbols');
const diagnostics = require('diagnostics_channel');

// Verifique se `tracingChannel` está disponível
const channels = diagnostics.channel ? diagnostics.channel('fastify.request.handler') : null;

function wrapThenable(thenable, reply, store) {
  if (store) store.async = true;
  thenable.then(function (payload) {
    if (reply[kReplyHijacked] === true) {
      return;
    }
    if (store && channels) {
      channels.publish({ asyncStart: true, store });
    }
    try {
      if (payload !== undefined || (reply.sent === false && reply.raw.headersSent === false && reply.request.raw.aborted === false)) {
        try {
          reply.send(payload);
        } catch (err) {
          reply[kReplyIsError] = true;
          reply.send(err);
        }
      }
    } finally {
      if (store && channels) {
        channels.publish({ asyncEnd: true, store });
      }
    }
  }, function (err) {
    if (store && channels) {
      store.error = err;
      channels.publish({ error: true, asyncStart: true, store });
    }
    try {
      if (reply.sent === true) {
        reply.log.error({ err }, 'Promise errored, but reply.sent = true was set');
        return;
      }
      reply[kReplyIsError] = true;
      reply.send(err);
    } catch (err) {
      reply.send(err);
    } finally {
      if (store && channels) {
        channels.publish({ asyncEnd: true, store });
      }
    }
  });
}

module.exports = wrapThenable;
